@name Magnums HoloText
@persist N [Text Mat]:string Length Height Thickness H_Scale Font Color:vector Scale LE E:entity P:vector U:vector F:vector R:vector A:angle AR:array C AUTOPARENT
#@model models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl
if(first()|duped()){

#[
Welcome to Magnum's HoloText E2!
This e2 can create hologram text that can have any material or color and can be scaled to fit a certain area.
]#

#The Text. This is what the sign will display. All alphabetical and numerical characters are accepted as well as ! ? . ' $ / * ^ : - , "

Text = "EngineConnect"

AUTOPARENT = 1
#If this is enabled, the e2 will automatically parent itself to whatever you attach it to. It will also become invisible. Do not use if placing the e2 on the world.

    Length = 15
    Height = 5
    Thickness = 0.5
    H_Scale = 12
    
Font = 0
#sprops/textures/sprops_metal5
#models/props_gulch/gulch_crystal_white
#wtp/metal_2b
Mat = "models/props_gulch/gulch_crystal_white"
Color = vec(255,255,255)

E = entity()
P = E:pos()
U = E:up()
F = E:forward()
R = E:right()
A = E:angles():rotateAroundAxis(F,90):rotateAroundAxis(U,-90)

AR = Text:explode("")
C = AR:count()

LE = C*H_Scale

Scale = Length/LE
N = 1
timer("CLK",100)
}
if(clk("CLK")){
    Ch = AR[N,string]
    if(Font==3){Ch = Ch:upper()}
    if("abcdefghijklmnopqrstuvwxyz":find(Ch)){
        Char = "models/sprops/misc/alphanum/alphanum_l_"+Ch+".mdl"
    }elseif("ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890":find(Ch)){
        Char = "models/sprops/misc/alphanum/alphanum_"+Ch+".mdl"
    }elseif(Ch=="&"){
        Char = "models/sprops/misc/alphanum/alphanum_and.mdl"
    }elseif(Ch=="."){
        Char = "models/sprops/misc/alphanum/alphanum_prd.mdl"
    }elseif(Ch=="$"){
        Char = "models/sprops/misc/alphanum/alphanum_dlsign.mdl"
    }elseif(Ch=="*"){
        Char = "models/sprops/misc/alphanum/alphanum_star_4.mdl"
    }elseif(Ch=="^"){
        Char = "models/sprops/misc/alphanum/alphanum_arrow_a.mdl"
    }elseif(Ch=="/"){
        Char = "models/sprops/misc/alphanum/alphanum_div.mdl"
    }elseif(Ch=="!"){
        Char = "models/sprops/misc/alphanum/alphanum_xmark.mdl"
    }elseif(Ch=="?"){
        Char = "models/sprops/misc/alphanum/alphanum_qmark.mdl"
    }elseif(Ch=="'"){
        Char = "models/sprops/misc/alphanum/alphanum_apost.mdl"
    }elseif(Ch==":"){
        Char = "models/sprops/misc/alphanum/alphanum_colon.mdl"
    }elseif(Ch=="-"){
        Char = "models/sprops/misc/alphanum/alphanum_min.mdl"
    }elseif(Ch==","){
        Char = "models/sprops/misc/alphanum/alphanum_com.mdl"
    }elseif(Ch=="\""){
        Char = "models/sprops/misc/alphanum/alphanum_quote.mdl"
    }
    
    if(Ch!=" "){
        holoCreate(N,P + Length*R/2 -(N-0.5)*Scale*R*H_Scale,vec(Scale,Thickness/3,Height/12),A,Color,Char)
        holoParent(N,E)
        holoMaterial(N,Mat)
        
    }
    N++
    if(N<=C){
        timer("CLK",100)
    }elseif(N>C){
        timer("FINAL",500)
    }
}
if(clk("FINAL")){
    for(N=1,C){
        holoBodygroup(N,0,Font)
    }
    if(AUTOPARENT){
        E:setMaterial("models/effects/vol_light001")
        if(E:isWeldedTo():isValid()){
            E:parentTo(E:isWeldedTo())
            #ifdef entity:constraintBreak(entity)
                E:constraintBreak(E:isWeldedTo())
            #endif
                
        }
    }
}

