@name JazzLok Speedo
@inputs Entity:entity
@outputs A
@persist Ang Speed0 Speed1 Speed2 Acceleration Acceleration_B Acceleration_C
@trigger none
@model models/jazzie/trains/locomotives/emd/cab/speedometer_75mph.mdl

entity():setBodygroup(1,1)
entity():setColor(vec(50))

if(first() | dupefinished())
{    
    A = 1
    holoCreate(A)
    holoParent(A,entity())
    holoModel(A, "models/jazzie/trains/locomotives/emd/cab/speedometer_pointer.mdl")
    holoScale(A,vec(1))
    holoColor(A,vec(1))
    holoAng(A,entity():toWorld(ang(0,245,0)))  

    A = 2
    holoCreate(A)
    holoParent(A,entity())
    holoModel(A, "models/jazzie/trains/locomotives/emd/cab/speedometer_pointer.mdl")
    holoScale(A,vec(0.96))
    holoColor(A,vec(255,250,0))
    holoPos(A,entity():toWorld(vec(0,10.25,-0.25)))
    holoAng(A,entity():toWorld(ang(0,90,0)))  
}

interval(100)

Speed = Entity:vel():length() / 23.5 
Ang = Ang + ( Speed  - Ang ) /  max( 10, 0 ) 


holoAng(1,entity():toWorld(ang(0,245-(Ang*4),0)))


if(Speed0 == 0)
{
    Speed1 = round(toUnit("m/s",Entity:vel():length()),1)
    timer("second",1000)
    Speed0 = 1
}

if(clk("second"))
{
    Speed2 = round(toUnit("m/s",Entity:vel():length()),1)
    Acceleration = (Speed2 - Speed1) * 3.280
    Speed0 = 0
}   
    
Acceleration_C = Acceleration_C + ( Acceleration_B - Acceleration_C ) /  max( 5, 0 ) 

if(Acceleration >= 4)
{
    Acceleration_B = 4
}
elseif(Acceleration <= -4)
{
    Acceleration_B = -4
}
else
{
    Acceleration_B = Acceleration 
}

holoAng(2,entity():toWorld(ang(0,90-(Acceleration_C * 30),0)))   


if(dupefinished())
{
    reset()
}
